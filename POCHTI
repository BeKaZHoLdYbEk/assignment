MAX_BOOKS; i++) { 
        if (isdigit(input[0])) { 
            int id = atoi(input); 
            if (books[i].ID == id) { 
                printf("Book found: '%s' by %s\n", books[i].title, books[i].author); 
                found = 1; 
                break; 
            } 
        } else { 
            if (strcmp(books[i].title, input) == 0) { 
                printf("Book found: '%s' by %s\n", books[i].title, books[i].author); 
                found = 1; 
                break; 
            } 
        } 
    } 
 
    if (!found) { 
        printf("Sorry, the book was not found.\n"); 
    } 
} 
 
// Function to manage fines 
void fineManagement() { 
    int day, fine = 3; 
    printf("For how many days did you borrow the book? \n"); 
    scanf("%d", &day); 
    if (day > 3) { 
        fine = fine * (day - 3); 
        printf("Your fine due to overdue is %d.\n", fine); 
    } else { 
        printf("No fine punishment!\n"); 
    } 
} 
 
// Main function 
int main() { 
    int action; 
 
    do { 
        // Display available actions 
        printf("\nSelect an action: \n"); 
        printf("1. Available books\n"); 
        printf("2. Borrow a book\n"); 
        printf("3. Return a book\n"); 
        printf("4. Search a book\n"); 
        printf("5. Fine management\n"); 
        printf("Enter action number: "); 
        scanf("%d", &action); 
 
        // Perform the selected action 
        switch(action) { 
            case 1: availableBooks(); break; 
            case 2: borrowBook(); break; 
            case 3: returnBook(); break; 
            case 4: searchBook(); break; 
            case 5: fineManagement(); break; 
            default: printf("Invalid selection, try again.\n"); 
        } 
    } while (action >= 1 && action <= 4); 
 
    return 0; 
}
