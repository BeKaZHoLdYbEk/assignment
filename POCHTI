#include <stdio.h> 
#include <string.h> 
#include <stdbool.h>  // For 'true' and 'false' 
#include <ctype.h>    // For checking if input is a number 
#include <stdlib.h>   
 
#define max 10  
 


// Define the Book structure 
typedef struct { 
    int ID; 
    char title[50]; 
    char author[50]; 
    bool borrowed;  
} Book; 



// Initialize the list of books 
Book books[max] = { 
    {1, "Abai", "Mukhtar Auezov", false}, 
    {2, "AZ i Ia", "Olzhas Suleimenov", false}, 
    {3, "My name is Qozha", "Berdibek Soqpaqbayev", false}, 
    {4, "Qara sozder", "Abai Qunanbaiuly", false}, 
    {5, "Qan men Ter", "Abdizhamil Nurpeisov", false}, 
    {6, "Qozy Korpesh - Byan Sulu", "Ghabit Musrepov", false}, 
    {7, "Qyz Zhibek", "Saken Seifullin", false}, 
    {8, "Ushqan uyia", "Baurzhan Momyshuly", false}, 
    {9, "Zhabaiy alma", "Sain Muratbekov", false}, 
    {10, "Zhusan iysy", "Sain Muratbekov", false} 
}; 



void availableBooks() { 
    printf("Available books:\n"); 
    int availableFound = 0; // Flag to track if there are available books 
 
    for (int i = 0; i < max; i++) { 
        if (!books[i].borrowed) { // Check if the book is not borrowed 
            printf("ID: %d | Title: '%s' | Author: %s\n", books[i].ID, books[i].title, books[i].author); 
            availableFound = 1; 
        } 
    } 
 
    if (!availableFound) {printf("No available books right now.\n");} 
} 



void borrowBook() { 
    char input[50]; 
    int found = 0; 
    printf("Enter the book's ID or Title you want to borrow: \n"); 
    scanf("%s", input); 
 
    for (int i = 0; i < max; i++) { 
        if (isdigit(input[0])) { 
            int id = atoi(input);  
            if (books[i].ID == id && !books[i].borrowed) { 
                printf("You have borrowed the book: '%s' by %s\n", books[i].title, books[i].author); 
                books[i].borrowed = true;   
                found = 1; 
                break; 
            } 
        } else { 
            // Check if the input matches the book's title 
            if (strcmp(books[i].title, input) == 0 && !books[i].borrowed) { 
                printf("You have borrowed the book: '%s' by %s\n", books[i].title, books[i].author); 
                books[i].borrowed = true; // Mark as borrowed 
                found = 1; 
                break; 
            } 
        } 
    } 
 
    if (!found) {printf("Sorry, this book is either not available or has already been borrowed.\n");} 
} 
 


void returnBook() { 
    char input[50]; 
    int found = 0; // To check if the book is found 
    printf("Enter the book's ID or Title you want to return: \n"); 
    scanf("%s", input); // Read user input (ID or title) 
 
    for (int i = 0; i < max; i++) { 
        // Check if the input is a number (ID) 
        if (isdigit(input[0])) { 
            int id = atoi(input); // Convert string to integer 
            if (books[i].ID == id && books[i].borrowed) { 
                printf("You have returned the book: '%s' by %s\n", books[i].title, books[i].author); 
                books[i].borrowed = false; // Mark as returned 
                found = 1; 
                break; 
            } 
        } else { 
            // Check if the input matches the book's title 
            if (strcmp(books[i].title, input) == 0 && books[i].borrowed) { 
                printf("You have returned the book: '%s' by %s\n", books[i].title, books[i].author); 
                books[i].borrowed = false; // Mark as returned 
                found = 1; 
                break; 
            } 
        } 
    } 
 
    if (!found) {printf("Sorry, this book is either not available or was not borrowed.\n");} 
} 
 


void searchBook() { 
    char input[50]; 
    int found = 0; 
    printf("Enter the Book ID or Title to search: \n"); 
    scanf("%s", input); 
 
    for (int i = 0; i <max; i++) { 
        if (isdigit(input[0])) { 
            int id = atoi(input); 
            if (books[i].ID == id) { 
                printf("Book found: '%s' by %s\n", books[i].title, books[i].author); 
                found = 1; 
                break; 
            } 
        } else { 
            if (strcmp(books[i].title, input) == 0) { 
                printf("Book found: '%s' by %s\n", books[i].title, books[i].author); 
                found = 1; 
                break; 
            } 
        } 
    } 
 
    if (!found) {printf("Sorry, the book was not found.\n");} 
} 
 


void fineManagement() { 
    int day, fine = 3; 
    printf("For how many days did you borrow the book? \n"); 
    scanf("%d", &day); 
    if (day > 3) { 
        fine = fine * (day - 3); 
        printf("Your fine due to overdue is %d.\n", fine); 
    } else { 
        printf("No fine punishment!\n"); 
    } 
} 
 


int main() { 
    int action; 
 
    do { 
        printf("\nSelect an action: \n"); 
        printf("1. Available books\n"); 
        printf("2. Borrow a book\n"); 
        printf("3. Return a book\n"); 
        printf("4. Search a book\n"); 
        printf("5. Fine management\n"); 
        printf("Enter action number: "); 
        scanf("%d", &action); 
 
        switch(action) { 
            case 1: availableBooks(); break; 
            case 2: borrowBook(); break; 
            case 3: returnBook(); break; 
            case 4: searchBook(); break; 
            case 5: fineManagement(); break; 
            default: printf("Invalid selection, try again.\n"); 
        } 
    } while (action >= 1 && action <= 4); 
 
    return 0; 
}
